#
# How To Use This File
# ====================
#
# To export environment variables in your current shell:
#
#     $ egrep -v '^#|^$' <THIS_FILE> | while read LINE ; do export $LINE ; done
#
# To set Heroku config variables:
#
#     $ heroku config:set $(grep -v '^#' <THIS_FILE> | xargs -d '\n')
#
# The "-d '\n'" option handles values with spaces.
#
# Thanks to https://stackoverflow.com/a/20909045/245672


CLUB_NAME=The Pirate's Cove

# Title to refer to members by. Omit if not applicable.
MEMBER_TITLE=Captain

# Support importing from legacy database
IMPORT_LEGACY=False

# Filename of club's Access database. Omit to disable.
MDB_FILENAME=club.mdb

# Details for fetching files from Dropbox
DROPBOX_APP_KEY=app_key
DROPBOX_APP_SECRET=app_secret

# Mailgun settings
MAILGUN_DOMAIN=mg.example.com
MAILGUN_API_KEY=key-123456
EMAIL_HOST_USER=postmaster@mg.example.com
EMAIL_HOST_PASSWORD=Passw0rd!
EMAIL_HOST=smtp.mailgun.org
EMAIL_PORT=587
EMAIL_USE_TLS=True

# Mail settings for outgoing mail
FROM_ADDRESS=The Pirate's Cove <webmaster@example.com>
# Omit to use FROM_ADDRESS:
REPLY_TO_ADDRESS=The Club Secretary <secretary@example.com>
# Omit to use FROM_ADDRESS:
BOUNCE_ADDRESS=<bounce@example.com>

# JSON-formatted list of name-address pairs of people who should get error
# notifications:
ADMINS=[["Admin", "admin@example.com"]]
# Note trailing space:
EMAIL_SUBJECT_PREFIX=[clubbable]
SERVER_EMAIL=clubbable@example.com


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY=change_me

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=True

# A JSON-formatted list of host/domain names that this site serves.
ALLOWED_HOSTS=["example.com", "www.example.com", "other.example.net"]

DATABASE_URL=sqlite:///clubbable/db/db.sqlite3
# Omit if IMPORT_LEGACY=False:
LEGACY_DB_URL=mysql://USER:PASSWORD@HOST:PORT/NAME

# How to store user-uploaded files. Valid values are "S3", "SFTP", "Dropbox",
# "local". Values are case-sensitive.
FILE_STORAGE_TYPE=SFTP

# If FILE_STORAGE_TYPE = "S3":
#AWS_ACCESS_KEY_ID=ABC123
#AWS_SECRET_ACCESS_KEY=abc123+456def
#AWS_STORAGE_BUCKET_NAME=example-bucket

# If FILE_STORAGE_TYPE = "SFTP":
SFTP_STORAGE_HOST=media.example.com
# Must include trailing slash:
SFTP_STORAGE_ROOT=/var/www/example.com/media/
SFTP_STORAGE_PARAMS={"hostname": "media.example.com", "username": "user", "password: "pass"}

# If FILE_STORAGE_TYPE = "Dropbox":
#DROPBOX_OAUTH2_TOKEN=abc123
#DROPBOX_ROOT_PATH=media/

# If FILE_STORAGE_TYPE = "local":
# Absolute filesystem path to the directory that will hold user-uploaded files.
#MEDIA_ROOT=/var/www/example.com/media/
# URL that handles the media served from MEDIA_ROOT
#MEDIA_URL=https://media.example.com/

LANGUAGE_CODE=en-US
TIME_ZONE=UTC

# Absolute path to the directory where collectstatic will collect static files.
STATIC_ROOT=/var/www/example.com/static/
STATIC_URL=https://static.example.com/

CELERY_RESULT_BACKEND=django-cache
CELERY_BROKER_URL=amqp://guest:guest@rabbit:5672//


# SSL certificate primary server name
PRIMARY_DOMAIN=example.com
# SSL certificate server names
SERVER_NAMES="example.com www.example.com other.example.net"
# Email address used to notify of cert-related issues
CERT_ADMIN=admin@example.com
